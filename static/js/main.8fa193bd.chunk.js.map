{"version":3,"sources":["Dropdown.js","Listbox.js","Detail.js","App.js","Credentials.js","reportWebVitals.js","index.js"],"names":["Dropdown","props","value","selectedValue","onChange","e","changed","target","options","map","item","idx","id","name","Listbox","clicked","preventDefault","items","onClick","track","Detail","album","artists","src","images","url","alt","htmlFor","App","spotify","ClientId","ClientSecret","useState","token","setToken","selectedGenre","listOfGenresFromAPI","genres","setGenres","selectedPlaylist","listOfPlaylistsFromAPI","playlist","setPlaylist","selectedTrack","listOfTracksFromAPI","tracks","setTracks","trackDetail","setTrackDetail","useEffect","axios","headers","btoa","data","method","then","tokenResponse","console","log","access_token","genreResponse","categories","onSubmit","tracksResponse","className","val","playlistResponse","playlists","type","trackInfo","filter","t","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fa193bd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Dropdown = props => {\r\n// change event handler in the dropdown component\r\nconst dropdownChanged = e => {\r\n    props.changed(e.target.value);\r\n}\r\n    return(\r\n<div>\r\n    {/* the value of the playlist genre */}\r\n    <select value={props.selectedValue} onChange={dropdownChanged}>\r\n        {props.options.map((item, idx) =>  <option key={idx} value={item.id}> {item.name}</option>)}\r\n    </select>\r\n\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Dropdown","import React from \"react\";\r\n\r\nconst Listbox = props => {\r\n\r\n    const clicked = e => {\r\n        e.preventDefault();\r\n        props.clicked(e.target.id)\r\n    }\r\n\r\n    return(\r\n<div>\r\n    {props.items.map((item, idx) => \r\n    <button key={idx} \r\n    onClick={clicked}\r\n            id={item.track.id}>\r\n\r\n            {item.track.name}\r\n    </button>)\r\n    }\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Listbox;","import React from \"react\";\r\n\r\nconst Detail = ({album, artists, name}) => {\r\n    return(\r\n        <div>\r\n            <div>\r\n                <img src={album.images[0].url}\r\n                alt={name}></img>\r\n            </div>\r\n                 <div> {<label htmlFor={name}>\r\n                {name}\r\n                </label>}\r\n                </div>\r\n                <label htmlFor={artists[0].name}>\r\n                    {artists[0].name}\r\n                </label>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Detail;","import React, { useState, useEffect } from \"react\";\nimport Dropdown from \"./Dropdown\";\nimport Listbox from \"./Listbox\";\nimport Detail from \"./Detail\";\nimport {Credentials} from \"./Credentials\"\nimport axios from \"axios\";\n\nconst App =() =>{\n  const spotify = Credentials();\n \n  const data = [\n    {value: 1, name: 'A'},\n    {value: 2, name: 'B'},\n    {value: 3, name: 'C'},\n  ]; \n\nconst [token, setToken] = useState(\"\");\nconst [genres, setGenres] = useState({selectedGenre : \"\", listOfGenresFromAPI: []});\nconst [playlist, setPlaylist] = useState({selectedPlaylist: \"\", listOfPlaylistsFromAPI: []});\nconst [tracks, setTracks] = useState({selectedTrack: \"\", listOfTracksFromAPI: []});\nconst [trackDetail, setTrackDetail] = useState(null);\n\nuseEffect(() =>{\n  axios(\"https://accounts.spotify.com/api/token\", {\n    headers:{\n      \"Content-Type\" : \"application/x-www-form-urlencoded\",\n      \"Authorization\" : \"Basic \" + btoa(spotify.ClientId + \":\" + spotify.ClientSecret)\n    },\n    data: \"grant_type=client_credentials\",\n    method: \"POST\",\n  })\n  .then(tokenResponse => {\n    console.log(tokenResponse.data.access_token);\n    setToken(tokenResponse.data.access_token);\n\n    axios(\"https://api.spotify.com/v1/browse/categories?locale=sv_US\",{\n      method: \"GET\",\n      headers: { \"Authorization\" : \"Bearer \" + tokenResponse.data.access_token}\n    })\n    .then(genreResponse =>{\n      setGenres({\n      setGenres : genres.selectedGenre,\n      listOfGenresFromAPI: genreResponse.data.categories.items,\n      })\n    });\n  })\n},[genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]);\n\nconst genreChanged = val => {\n  setGenres({\n    selectedGenre: val,\n    listOfGenresFromAPI: genres.listOfGenresFromAPI\n  });\n\naxios(`https://api.spotify.com/v1/browse/categories/${val}/playlists?limit=10`,{\n  method:\"GET\",\n  headers: {\"Authorization\" : \"Bearer \" + token}\n})\n.then(playlistResponse => {\n  setPlaylist({\n    selectedPlaylist: playlist.selectedPlaylist,\n    listOfPlaylistsFromAPI: playlistResponse.data.playlists.items\n  })\n });\n\n }\n const playlistChanged = val => {\n   setPlaylist({\n     selectedPlaylist: val,\n     listOfPlaylistsFromAPI: playlist.listOfPlaylistsFromAPI\n   });\n\n }\n\n const buttonClicked = e => {\n   e.preventDefault();\n  axios(`https://api.spotify.com/v1/playlists/${playlist.selectedPlaylist}/tracks?limit=10`,{\n    method: \"GET\",\n    headers: {\n      \"Authorization\" : \"Bearer \" + token\n    }\n  })\n  .then(tracksResponse => {\n    setTracks({\n      selectedTrack: tracks.selectedTrack,\n      listOfTracksFromAPI: tracksResponse.data.items\n    })\n  });\n }\n\n\nconst listboxClicked = val => {\n  const currentTracks = [...tracks.listOfTracksFromAPI];\n\n  const trackInfo = currentTracks.filter(t => t.track.id === val);\n  setTrackDetail(trackInfo[0].track);\n}\n\n\n  return(\n  <form onSubmit={buttonClicked}>\n    <div className=\"container\">\n    <Dropdown options={genres.listOfGenresFromAPI} selectedValue={genres.selectedGenre} changed={genreChanged}/>\n    <Dropdown options={playlist.listOfPlaylistsFromAPI} selectedValue={playlist.selectedPlaylist} changed={playlistChanged}/>\n    <button type=\"submit\">\n      Search\n    </button>\n    <Listbox items={tracks.listOfTracksFromAPI} clicked={listboxClicked}/>\n    {trackDetail && <Detail {...trackDetail}/>}\n  </div>\n  </form>\n  );\n}\n\n\nexport default App;","const Credentials = () => {\r\n\r\n    return {\r\n        ClientId: '3d5af1f3c9b24cee929f85c509915129',\r\n        ClientSecret: '8eb0afa92be84523890febff1298db74'\r\n    }\r\n}\r\n\r\nexport { Credentials };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\n// import $ from \"jquery\"\n// import Popper from \"popper.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}